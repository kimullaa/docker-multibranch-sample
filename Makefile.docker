.PHONY: help build unit lint clean

# ホストで複数のDockerを起動できるようにイメージ/コンテナ名にidを付与する
ID = 'default'
BUILD_SERVER_IMAGE = sample-base-build-server-$(ID)
BUILD_CONTAINER    = sample-build-$(ID)
UNIT_CONTAINER     = sample-unit-$(ID)
LINT_CONTAINER     = sample-lint-$(ID)

# ホスト側にライブラリをキャッシュするために以下ディレクトリを起動時にマウントする
CACHE_PATH='/tmp/docker/cache'

help:
	@echo "--------------------------------------------------------"
	@echo "usage:  make -f Makefile.docker ID=<コンテナ名に付与するID> <target>"
	@echo "--------------------------------------------------------"
	@echo "build   コンテナ内でビルドし、成果物をローカルにコピーする"
	@echo "unit    コンテナ内で単体テストし、成果物をローカルにコピーする"
	@echo "lint    コンテナ内で静的解析し、成果物をローカルにコピーする"
	@echo "clean   指定されたIDに該当するコンテナグループをすべて削除する。"
	@echo "        <none>のイメージを消す。"
	@echo "--------------------------------------------------------"

base:
	docker build -t $(BUILD_SERVER_IMAGE) -f Dockerfile.build .

build: base
	docker run --name $(BUILD_CONTAINER) -v $(CACHE_PATH)/.m2:/root/.m2 -v $(CACHE_PATH)/.node_modules:/build/client/node_modules $(BUILD_SERVER_IMAGE) build || docker rm $(BUILD_CONTAINER)
	docker cp $(BUILD_CONTAINER):/build/server/target server/target
	docker rm $(BUILD_CONTAINER)

clean:
	docker rmi $$(docker images -f dangling=true -q) || true
	docker rm $(LINT_CONTAINER) || true
	docker rm $(UNIT_CONTAINER) || true
	docker rm $(BUILD_CONTAINER) || true

unit: base
	docker run --name $(UNIT_CONTAINER) -v $(CACHE_PATH)/.m2:/root/.m2 -v $(CACHE_PATH)/.node_modules:/build/client/node_modules $(BUILD_SERVER_IMAGE) unit || docker rm $(UNIT_CONTAINER)
	docker cp $(UNIT_CONTAINER):/build/server/target server/target
	docker cp $(UNIT_CONTAINER):/build/client/test/report client/test/report
	docker rm $(UNIT_CONTAINER)

lint: base
	docker run --name $(LINT_CONTAINER) -v $(CACHE_PATH)/.m2:/root/.m2 -v $(CACHE_PATH)/.node_modules:/build/client/node_modules $(BUILD_SERVER_IMAGE) lint || docker rm $(LINT_CONTAINER)
	docker cp $(LINT_CONTAINER):/build/server/target server/target
	docker cp $(LINT_CONTAINER):/build/client/test/report client/test/report
	docker rm $(LINT_CONTAINER)
